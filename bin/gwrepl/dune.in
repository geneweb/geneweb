(library
  (name gwrepl_deps)
  (flags -linkall)
  (libraries
    stdlib
    str
    unix
    geneweb_core
    geneweb_def
    geneweb_util
    geneweb_system_util
    geneweb_gwdb
    %%%GWDB_PKG%%%
    %%%SOSA_PKG%%%
  )
  (modules)
)

(rule
  (target data.cppo.ml)
  (deps .depend %{lib:geneweb:geneweb.cma} %{lib:geneweb:ancient/gw_ancient.cma} (:maker mk_data.ml))
  (action (with-stdout-to %{target} (run ocaml %{maker})))
)

(rule
  (target data.ml)
  (deps data.cppo.ml)
  (action (run %{bin:cppo} %%%CPPO_D%%% %{deps} -o %{target}))
)

(executable
 (name gwrepl)
 (public_name gwrepl)
 (link_flags -linkall)
 (libraries compiler-libs.toplevel unix ancient)
 (preprocess
  (per_module
   ((action (run %{bin:cppo} %%%CPPO_D%%% %{input-file})) gwrepl_exe)
   ((pps ppx_blob) data)
  )
 )
 (modes byte_complete)
 (modules gwrepl data)
)
