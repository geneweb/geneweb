#!/bin/bash

cd "$(dirname "$0")" || exit 1

pytest_report="./pytest_report.log"

suite=$(grep -oE '<testsuite name=[^>]+>' "$pytest_report")
suite_name=$(echo "$suite" | sed -E 's/.* name="([^"]+)".*/\1/')
suite_errors=$(echo "$suite" | sed -E 's/.*errors="([^"]+)".*/\1/')
suite_failures=$(echo "$suite" | sed -E 's/.*failures="([^"]+)".*/\1/')
suite_skipped=$(echo "$suite" | sed -E 's/.*skipped="([^"]+)".*/\1/')
suite_tests=$(echo "$suite" | sed -E 's/.*tests="([^"]+)".*/\1/')
suite_time=$(echo "$suite" | sed -E 's/.*time="([^"]+)".*/\1/')
suite_hostname=$(echo "$suite" | sed -E 's/.*hostname="([^"]+)".*/\1/')
suite_passed=$((suite_tests - suite_failures - suite_errors - suite_skipped))

echo "## Generated Test Documentation"
echo "> [!INFO] $suite_name@$suite_hostname ($suite_time s)<br>"
echo "> completed: $suite_passed/$suite_tests, failed: $suite_failures, errors: $suite_errors, skipped: $suite_skipped"
echo ""
# Loop over all test_*.py files
for file in **/test_*.py; do
    if [[ -f "$file" ]]; then
        echo "Generating documentation for $file"
        echo -n "### Test for: "
        output=$(./gen_doc.sh "$file")
        output=$(echo "$output" | sed -E '1s/^# //')
        echo "$output"
        echo "> *loaded from $file*"
    fi
done

echo "---"
echo "> This documentation was auto-generated by \`gen_doc_all.sh\`"
echo ""

cd - >/dev/null || exit 1