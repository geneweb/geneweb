name: Golden Master Tests

on:
  push:
    branches: [ged2gwb, main, dev]
    paths:
      - 'python/**'
      - 'test/scena/**'
      - 'test/fixtures/**'
      - '.github/workflows/golden-master-pipeline.yml'
  workflow_dispatch:

jobs:
  golden-master-tests:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ocaml-nox \
            opam \
            build-essential \
            m4 \
            pkg-config \
            libssl-dev \
            libgmp-dev \
            zlib1g-dev

      - name: Setup OCaml and OPAM
        run: |
          opam init --disable-sandboxing --yes
          eval $(opam env)
          opam install --yes dune ocamlfind camlp5

      - name: Configure and build GeneWeb OCaml
        run: |
          eval $(opam env)
          ocaml ./configure.ml
          make clean
          make distrib

      - name: Create test fixtures if missing
        run: |
          mkdir -p test/fixtures

          if [ ! -f "test/fixtures/basic.ged" ]; then
            cat > test/fixtures/basic.ged << 'EOF'
          0 HEAD
          1 SOUR ged2gwb-test
          1 GEDC
          2 VERS 5.5.1
          2 FORM LINEAGE-LINKED
          1 CHAR UTF-8
          0 @I1@ INDI
          1 NAME John /DOE/
          1 SEX M
          1 BIRT
          2 DATE 1 JAN 1950
          2 PLAC New York, USA
          0 TRLR
          EOF
          fi

          # Copy basic.ged to other test files if they don't exist
          for file in dates.ged names.ged; do
            if [ ! -f "test/fixtures/$file" ]; then
              cp test/fixtures/basic.ged test/fixtures/$file
            fi
          done

      - name: Run Golden Master Tests
        run: |
          # Find all test JSON files and run tests for each binary
          for test_file in test/scena/*.json; do
            if [ -f "$test_file" ]; then
              binary_name=$(basename "$test_file" .json)
              echo "ðŸ§ª Running Golden Master tests for: $binary_name"

              python3 test/run_golden_tests.py "$binary_name" || echo "Tests completed with issues for $binary_name"
            fi
          done

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: golden-master-test-results
          path: test/results/
          retention-days: 30
