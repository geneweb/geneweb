name: Golden Master Tests & Deployment

on:
  push:
    branches: [ged2gwb]
    paths:
      - 'python/**'
      - 'test/scena/**'
      - 'test/fixtures/**'

jobs:
  discover-binaries:
    runs-on: ubuntu-latest
    outputs:
      binaries: ${{ steps.find-binaries.outputs.binaries }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find available test binaries
        id: find-binaries
        run: |
          binaries=$(ls test/scena/*.json 2>/dev/null | sed 's|test/scena/||g' | sed 's|\.json||g' | jq -R -s -c 'split("\n")[:-1]')
          echo "binaries=${binaries}" >> $GITHUB_OUTPUT

  golden-master-tests:
    runs-on: ubuntu-latest
    needs: discover-binaries

    strategy:
      matrix:
        binary: ${{ fromJson(needs.discover-binaries.outputs.binaries) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup OCaml
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: 4.14.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt
          opam install . --deps-only

      - name: Build OCaml reference
        run: |
          make clean
          make

      - name: Build Python version
        run: |
          cd python/${{ matrix.binary }}
          python setup.py build

      - name: Run Golden Master Tests
        id: golden_tests
        run: |
          python test/run_golden_tests.py ${{ matrix.binary }}
          echo "test_result=$?" >> $GITHUB_OUTPUT

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.binary }}
          path: test/results/${{ matrix.binary }}/

      - name: Deploy binary on success
        if: steps.golden_tests.outputs.test_result == '0'
        run: |
          mkdir -p distribution/gw
          # Copy Python binary to distribution/gw/ to replace OCaml version
          if [ -f "python/${{ matrix.binary }}/${{ matrix.binary }}" ]; then
            cp python/${{ matrix.binary }}/${{ matrix.binary }} distribution/gw/${{ matrix.binary }}
          elif [ -f "python/${{ matrix.binary }}/dist/${{ matrix.binary }}" ]; then
            cp python/${{ matrix.binary }}/dist/${{ matrix.binary }} distribution/gw/${{ matrix.binary }}
          else
            echo "Python binary not found for ${{ matrix.binary }}"
            exit 1
          fi

      - name: Commit updated binary
        if: steps.golden_tests.outputs.test_result == '0'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add distribution/gw/${{ matrix.binary }}
          git commit -m "Update ${{ matrix.binary }} binary after successful Golden Master tests" || exit 0
          git push
