name: build
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          - 4.08.x
        include:
          - os: windows-latest
            ocaml-compiler: 4.14.x
          - os: ubuntu-latest
            ocaml-compiler: 5.1.x
          - os: macos-latest
            ocaml-compiler: 5.1.x
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Ocaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
      - name: Setup GeneWeb dependencies + ocamlformat
        run: |
          opam pin add . -y --no-action
          opam depext -y geneweb
          opam install -y ./*.opam --deps-only --with-test
          opam pin ocamlformat 0.24.1
      - name: Make ocamlformat > build/distrib
        run: |
          opam exec -- ocaml ./configure.ml --release
          opam exec -- make fmt distrib
      - name: Make CI tests
        run: opam exec -- make ci

  build_nnp:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - macos-13
        ocaml-compiler:
          - ocaml-variants.4.14.2+options,ocaml-option-nnp
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OCaml ${{ matrix.ocaml-compiler }} with NNP
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Setup GeneWeb dependencies
        run: |
          opam install -y ancient calendars.1.0.0 camlp-streams camlp5 camlzip cppo dune jingoo markup ocamlformat.0.24.1 oUnit ppx_blob ppx_deriving ppx_import stdlib-shims syslog unidecode.0.2.0 uri uucp uutf uunf

      - name: build/distrib
        run: |
          opam exec -- ocaml ./configure.ml --release
          opam exec -- make fmt distrib
          
      - name: Run gwd with cache-in-memory parameter and check output
        run: |
          output=$(distribution/gw/gwd -cache-in-memory testing 2>&1)
          if echo "$output" | grep -q "Caching database testing in memory"; then
            echo "Caching message found, test passed."
            exit 0
          else
            echo "Caching message not found, test failed."
            exit 1
          fi
