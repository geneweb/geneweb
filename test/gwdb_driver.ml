type iper = unit
type ifam = unit
type istr = unit
type person
type family
type string_person_index
type base
type 'a cursor = { length : int ; get : int -> 'a option }

let base_notes_are_empty _ = assert false
let base_notes_dir _ = assert false
let base_notes_origin_file _ = assert false
let base_notes_read _ = assert false
let base_notes_read_first_line _ = assert false
let base_particles _ = assert false
let base_strings_of_first_name _ = assert false
let base_strings_of_surname _ = assert false
let base_wiznotes_dir _ = assert false
let bname _ = assert false
let clear_ascends_array _ = assert false
let clear_couples_array _ = assert false
let clear_descends_array _ = assert false
let clear_families_array _ = assert false
let clear_persons_array _ = assert false
let clear_strings_array _ = assert false
let clear_unions_array _ = assert false
let close_base _ = assert false
let commit_notes _ = assert false
let commit_patches _ = assert false
let date_of_last_change _ = assert false
let delete_ascend _ = assert false
let delete_couple _ = assert false
let delete_descend _ = assert false
let delete_family _ = assert false
let delete_person _ = assert false
let delete_union _ = assert false
let dummy_ifam = ()
let dummy_iper = ()
let empty_string = ()
let eq_istr _ = assert false
let families _ = assert false
let get_ascend _ = assert false
let get_couple _ = assert false
let get_descend _ = assert false
let get_family _ = assert false
let get_person _ = assert false
let get_union _ = assert false
let ifam_of_string _ = assert false
let insert_ascend _ = assert false
let insert_couple _ = assert false
let insert_descend _ = assert false
let insert_family _ = assert false
let insert_person _ = assert false
let insert_string _ = assert false
let insert_union _ = assert false
let iper_of_string _ = assert false
let is_empty_string _ = assert false
let is_quest_string _ = assert false
let istr_of_string _ = assert false
let load_ascends_array _ = assert false
let load_couples_array _ = assert false
let load_descends_array _ = assert false
let load_families_array _ = assert false
let load_persons_array _ = assert false
let load_strings_array _ = assert false
let load_unions_array _ = assert false
let make  _ = assert false
let nb_of_families _ = assert false
let nb_of_persons _ = assert false
let nb_of_real_persons _ = assert false
let new_ifam _ = assert false
let new_iper _ = assert false
let open_base _ = assert false
let patch_ascend _ = assert false
let patch_couple _ = assert false
let patch_descend _ = assert false
let patch_family _ = assert false
let patch_person _ = assert false
let patch_union _ = assert false
let person_of_key _ = assert false
let persons _ = assert false
let persons_of_first_name _ = assert false
let persons_of_name _ = assert false
let persons_of_surname _ = assert false
let quest_string = ()
let read_nldb _ = assert false
let sou _ = assert false
let spi_find _ = assert false
let spi_first _ = assert false
let spi_next _ = assert false
let string_of_ifam _ = assert false
let string_of_iper _ = assert false
let string_of_istr _ = assert false
let sync ?scratch:_ = assert false
let write_nldb _ = assert false
