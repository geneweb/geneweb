%( Input datalists and function to populate all datalists %)
%define;dl(xx)%if;(b.datalist_xx=1)<datalist id="datalist_xx"></datalist>%end;%nn;%end;
%apply;dl("fnames")
%apply;dl("snames")
%apply;dl("places")
%apply;dl("occupations")
%apply;dl("sources")
%if;("IND" in e.m)
  %apply;dl("pub_names")
  %apply;dl("qualifiers")
  %apply;dl("aliases")
  %apply;dl("titles")
  %apply;dl("estates")
%end;
<script>
function populateDatalist(datalistId, cacheFile, book) {
    const dataList = document.getElementById(datalistId);
    if (!dataList) {
        console.log(`Datalist ${datalistId} not found`);
        return;
    }
    fetch(cacheFile)
        .then(response => {
            const reader = response.body.pipeThrough(new DecompressionStream('gzip')).getReader();
            return new ReadableStream({
                start(controller) {
                    return pump();
                    function pump() {
                        return reader.read().then(({ done, value }) => {
                            if (done) {
                                controller.close();
                                return;
                            }
                            controller.enqueue(value);
                            return pump();
                        });
                    }
                }
            });
        })
        .then(stream => new Response(stream))
        .then(response => response.text())
        .then(text => {
            const lines = text.split("\n");
            lines.forEach(line => {
                if (line.trim()) {
                    const option = document.createElement("option");
                    option.value = line.trim().replace("<option>", "");
                    dataList.appendChild(option);
                }
            });
        })
        .catch(error => console.error(`Error while loading ${cacheFile}:`, error));
}

var baseName = "%base.name;";
var path = baseName + "/cache/" + baseName;

var datalists = %[
%if;(b.datalist_fnames=1)    { id: "datalist_fnames", file: path + "_fnames.cache.gz", book: "fn" },%end;
%if;(b.datalist_snames=1)    { id: "datalist_snames", file: path + "_snames.cache.gz", book: "sn" },%end;
%if;(b.datalist_places=1)    { id: "datalist_places", file: path + "_places.cache.gz", book: "place" },%end;
%if;(b.datalist_occupations=1)    { id: "datalist_occupations", file: path + "_occupations.cache.gz", book: "occu" },%end;
%if;(b.datalist_sources=1)    { id: "datalist_sources", file: path + "_sources.cache.gz", book: "src" },%end;
%if;("IND" in e.m)
  %if;(b.datalist_pub_names=1)  { id: "datalist_pub_names", file: path + "_pub_names.cache.gz", book: "pubn" },%end;
  %if;(b.datalist_qualifiers=1)  { id: "datalist_qualifiers", file: path + "_qualifiers.cache.gz", book: "qual" },%end;
  %if;(b.datalist_aliases=1)  { id: "datalist_aliases", file: path + "_aliases.cache.gz", book: "alias" },%end;
  %if;(b.datalist_titles=1)  { id: "datalist_titles", file: path + "_titles.cache.gz", book: "title" },%end;
  %if;(b.datalist_estates=1)  { id: "datalist_estates", file: path + "_estates.cache.gz", book: "domain" },%end;
%end;
%];

function setupInputClickListeners() {
    const inputs = document.querySelectorAll('input[list]');
    inputs.forEach(input => {
        const datalistId = input.getAttribute('list');
        const datalistConfig = datalists.find(list => list.id === datalistId);
        
        if (datalistConfig && datalistConfig.book) {
            input.addEventListener('mousedown', function(event) {
                if (event.ctrlKey && event.button === 0) {
                    event.preventDefault();
                    setTimeout(() => openBook(this.value, datalistConfig.book), 0);
                }
            });
        }
    });
}

function openBook(value, book) {
    if (value.trim() === '') {
        console.log('Input is empty, not opening book.');
        return;
    }
    const encodedValue = encodeURIComponent(value);
    const url = `?%if;cgi;b=${baseName}&%end;m=MOD_DATA&data=${book}&s=${encodedValue}`;
    window.open(url, '_blank');
}

datalists.forEach(list => populateDatalist(list.id, list.file, list.book));

%( add buton %)
function addClearButtonToInputs() {
    const elements = document.querySelectorAll('input[type="text"], input[type="search"], input[type="email"], input[type="tel"], input[type="url"], textarea');
    elements.forEach(element => {
        // Create wrapper div
        const wrapper = document.createElement('div');
        wrapper.style.position = 'relative';
        wrapper.style.display = 'inline-block';
        wrapper.style.width = '100%';
        element.parentNode.insertBefore(wrapper, element);
        wrapper.appendChild(element);

        // Adjust element styling
        element.style.paddingRight = '40px'; // Make room for clear button and datalist indicator

        // Create clear button
        const clearButton = document.createElement('i');
        clearButton.className = 'fas fa-times';
        clearButton.style.position = 'absolute';
        clearButton.style.right = element.tagName.toLowerCase() === 'input' && element.getAttribute('list') ? '10px' : '8px';
        clearButton.style.top = element.tagName.toLowerCase() === 'textarea' ? '10px' : '50%';
        clearButton.style.transform = element.tagName.toLowerCase() === 'textarea' ? 'none' : 'translateY(-50%)';
        clearButton.style.cursor = 'pointer';
        clearButton.style.display = 'none';  // Hidden by default
        clearButton.style.color = '#999'; // Adjust color as needed
        clearButton.style.fontSize = '1.0em'; // Adjust size as needed
        wrapper.appendChild(clearButton);

        // Show/hide clear button based on element content
        function toggleClearButton() {
            clearButton.style.display = element.value ? 'block' : 'none';
        }

        element.addEventListener('input', toggleClearButton);
        toggleClearButton();  // Initial state

        // Clear element on button click
        clearButton.addEventListener('click', (e) => {
            e.preventDefault(); // Prevent any form submission
            element.value = '';
            toggleClearButton();
            element.focus();  // Keep focus on the element
            // Trigger input event to update any listeners
            element.dispatchEvent(new Event('input', { bubbles: true }));
        });
    });
}

document.addEventListener('DOMContentLoaded', () => {
    addClearButtonToInputs();
    setupInputClickListeners();
});

%( show/hide some inputs of witnesses/relationsparents/children/fwitnesses depending of create/link value in selects %)
$(document).ready(function() {
  $("[id$=_selct]").on('change', function() {
    var pre = this.id;
    var all = '#' + pre + '_data,#' + pre + '_sex,#' + pre + '_kind';
    var mod = '#' + pre + '_mod';
    if (this.value == "link") {
      $(all).hide();
      $(mod).show();}
    else {
      $(all).show();
      $(mod).hide();}
  }).change();
});

<!--
function changeCalendar(e,v,m,c) {
  var mv = m;
  switch (m) {
  case "VD": mv = 1; break;
  case "BR": mv = 2; break;
  case "FM": mv = 3; break;
  case "NI": mv = 4; break;
  case "PL": mv = 5; break;
  case "VT": mv = 6; break;
  case "GE": mv = 7; break;
  case "FL": mv = 8; break;
  case "PR": mv = 9; break;
  case "ME": mv = 10; break;
  case "TH": mv = 11; break;
  case "FT": mv = 12; break;
  case "JC": mv = 13; break;
  }
  switch(c.options%[c.selectedIndex%].value) {
  case 'G':
  case 'J':
    document.getElementById(e).innerHTML = '\
<select class="form-control pl-sm-1 pr-lg-0 px-xl-2 %if;([!dates order]0 != "mmddyyyy")ml-sm-2 ml-md-3%end;" name="' + v + '">\
<option value=""' + (mv == 0 ? ' selected' : '') + '>%nn;
-</option>\
<option value="1"' + (mv == 1 ? ' selected' : '') + '>%nn;
[(month)]0</option>\
<option value="2"' + (mv == 2 ? ' selected' : '') + '>%nn;
[(month)]1</option>\
<option value="3"' + (mv == 3 ? ' selected' : '') + '>%nn;
[(month)]2</option>\
<option value="4"' + (mv == 4 ? ' selected' : '') + '>%nn;
[(month)]3</option>\
<option value="5"' + (mv == 5 ? ' selected' : '') + '>%nn;
[(month)]4</option>\
<option value="6"' + (mv == 6 ? ' selected' : '') + '>%nn;
[(month)]5</option>\
<option value="7"' + (mv == 7 ? ' selected' : '') + '>%nn;
[(month)]6</option>\
<option value="8"' + (mv == 8 ? ' selected' : '') + '>%nn;
[(month)]7</option>\
<option value="9"' + (mv == 9 ? ' selected' : '') + '>%nn;
[(month)]8</option>\
<option value="10"' + (mv == 10 ? ' selected' : '') + '>%nn;
[(month)]9</option>\
<option value="11"' + (mv == 11 ? ' selected' : '') + '>%nn;
[(month)]10</option>\
<option value="12"' + (mv == 12 ? ' selected' : '') + '>%nn;
[(month)]11</option>\
</select>\
';
    break;
  case 'F':
    document.getElementById(e).innerHTML = '\
<select class="form-control pl-sm-1 pr-lg-0 px-xl-2 %if;([!dates order]0 != "mmddyyyy")ml-sm-2 ml-md-3%end;" name="' + v + '">\
<option value=""' + (mv == 0 ? ' selected' : '') + '>%nn;
-</option>\
<option value="1"' + (mv == 1 ? ' selected' : '') + '>%nn;
[(french revolution month)]0</option>\
<option value="2"' + (mv == 2 ? ' selected' : '') + '>%nn;
[(french revolution month)]1</option>\
<option value="3"' + (mv == 3 ? ' selected' : '') + '>%nn;
[(french revolution month)]2</option>\
<option value="4"' + (mv == 4 ? ' selected' : '') + '>%nn;
[(french revolution month)]3</option>\
<option value="5"' + (mv == 5 ? ' selected' : '') + '>%nn;
[(french revolution month)]4</option>\
<option value="6"' + (mv == 6 ? ' selected' : '') + '>%nn;
[(french revolution month)]5</option>\
<option value="7"' + (mv == 7 ? ' selected' : '') + '>%nn;
[(french revolution month)]6</option>\
<option value="8"' + (mv == 8 ? ' selected' : '') + '>%nn;
[(french revolution month)]7</option>\
<option value="9"' + (mv == 9 ? ' selected' : '') + '>%nn;
[(french revolution month)]8</option>\
<option value="10"' + (mv == 10 ? ' selected' : '') + '>%nn;
[(french revolution month)]9</option>\
<option value="11"' + (mv == 11 ? ' selected' : '') + '>%nn;
[(french revolution month)]10</option>\
<option value="12"' + (mv == 12 ? ' selected' : '') + '>%nn;
[(french revolution month)]11</option>\
<option value="13"' + (mv == 13 ? ' selected' : '') + '>%nn;
[(french revolution month)]12</option>\
</select>\
';
    break;
  case 'H':
    document.getElementById(e).innerHTML = '\
<select class="form-control pl-sm-1 pr-lg-0 px-xl-2 %if;([!dates order]0 != "mmddyyyy")ml-sm-2 ml-md-3%end;" name="' + v + '">\
<option value=""' + (mv == 0 ? ' selected' : '') + '>%nn;
-</option>\
<option value="1"' + (mv == 1 ? ' selected' : '') + '>%nn;
[(hebrew month)]0</option>\
<option value="2"' + (mv == 2 ? ' selected' : '') + '>%nn;
[(hebrew month)]1</option>\
<option value="3"' + (mv == 3 ? ' selected' : '') + '>%nn;
[(hebrew month)]2</option>\
<option value="4"' + (mv == 4 ? ' selected' : '') + '>%nn;
[(hebrew month)]3</option>\
<option value="5"' + (mv == 5 ? ' selected' : '') + '>%nn;
[(hebrew month)]4</option>\
<option value="6"' + (mv == 6 ? ' selected' : '') + '>%nn;
[(hebrew month)]5</option>\
<option value="7"' + (mv == 7 ? ' selected' : '') + '>%nn;
[(hebrew month)]6</option>\
<option value="8"' + (mv == 8 ? ' selected' : '') + '>%nn;
[(hebrew month)]7</option>\
<option value="9"' + (mv == 9 ? ' selected' : '') + '>%nn;
[(hebrew month)]8</option>\
<option value="10"' + (mv == 10 ? ' selected' : '') + '>%nn;
[(hebrew month)]9</option>\
<option value="11"' + (mv == 11 ? ' selected' : '') + '>%nn;
[(hebrew month)]10</option>\
<option value="12"' + (mv == 12 ? ' selected' : '') + '>%nn;
[(hebrew month)]11</option>\
<option value="13"' + (mv == 13 ? ' selected' : '') + '>%nn;
[(hebrew month)]12</option>\
</select>\
';
    break;
  }
}
-->
</script>