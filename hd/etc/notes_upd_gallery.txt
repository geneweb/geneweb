<!DOCTYPE html>
<html>
<head>
  <title>Editeur de map</title>
  <meta name="robots" content="none">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="shortcut icon" href="%image_prefix;/favicon_gwd.png">
  <link rel="apple-touch-icon" href="%image_prefix;/favicon_gwd.png">
  %include;css
  <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css">
  <style>
  .in { background-color: coral !important; }
  #selection { border:2px solid white; background:#1B94E0; opacity:0.4; filter:alpha(opacity=40); margin:0px; padding:0px; display:none; }
  .list_comma { display: inline; list-style: none; padding-left: 0; }
  .list_comma li { display: inline; }
  .list_comma li:not(:last-child):after { content: ", "; }
  .list_comma li:last-child:after { content: "."; }
  input:invalid { box-shadow: 0 0 1.5px 1px red; }
  #image { cursor: crosshair; }
  </style>
  %include;hed
</head>
<body%body_prop;>
<div class="container-fluid">
%include;home
<h1>Editeur de map</h1>

<p id="fd_error"></p>

<div class="form-group row">
  <label for="page_title" class="col-form-label col-auto">[*title/titles]0</label>
  <input type="text" class="form-control col-sm-10" id="page_title">
</div>
<div class="form-group row">
  <label for="page_desc" class="col-form-label col-auto">Description</label>
  <textarea class="form-control col-sm-10" id="page_desc"></textarea>
</div>
<div class="form-group row">
  <div class="col-auto">Chemin</div>
  <input id="doc" type="radio" name="path" value="doc" checked>
  <label for="doc" class="col-form-label col-auto" title="%%sm=DOC&amp;s=">DOC</label>
  <input id="public" type="radio" name="path" value="public">
  <label for="public" class="col-form-label col-auto" title="gallery_path = %bvar.gallery_path;">[*iftitles/public/private]1</label>
  <input id="private" type="radio" name="path" value="private">
  <label for="private" class="col-form-label col-auto" title="gallery_path_private = %bvar.gallery_path_private;">[*iftitles/public/private]2</label>
  <input id="other" type="radio" name="path" value="other">
  <label for="other" class="col-form-label col-auto">Autre</label>
  <input id="path" type="text" class="form-control col-sm-4" disabled>
  <div class="col-auto">[*file]</div>
  <input id="fname" type="text" class="form-control col-sm-1">
  <button id="face_detection" class="btn btn-primary col-auto" disabled>DÃ©tection</button>
</div>

<div onmousedown="return false" id="frame">
<map id="map" name="map"></map>
<img id="image" usemap="#map">
<div id="selection"></div>
</div>
<ul id="div_legend" class="list_comma"></ul>

<table id="map_table" class="display compact" style="width=100%">
 <thead><tr>
  <th>Type</th>
  <th>[*first name/first names]0</th>
  <th>[*surname/surnames]0</th>
  <th>#</th>
  <th>[*miscellaneous notes]</th>
  <th>href</th>
  <th>[*comment]</th>
  <th>Actions</th>
 </tr></thead>
</table>

<form id="form" method="post" action="%action;">
 %hidden;
 <input type="hidden" name="m" value="MOD_NOTES_OK">
 <input type="hidden" name="f" value="%evar.f;">
 <input id="digest" type="hidden" name="digest">
 <input id="notes" type="hidden" name="notes">
 <button type="submit" class="btn btn-primary">Ok</button>
 <a class="btn btn-secondary" href="%url;notmpl=on">Edit</a>
</form>

</div>
%include;trl
%include;copyr

</div>
%include;js
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="%if(cgi)%bvar.static_path;%end;js/jquery.maphilight.js"></script>
<script async src="https://docs.opencv.org/4.1.0/opencv.js" onload="onOpenCvReady();" type="text/javascript"></script>
<script src="https://docs.opencv.org/4.1.0/utils.js" type="text/javascript"></script>
<script>
function get( v ) {
  if( typeof v !== "undefined" ) {
    return v
  } else {
    return ""
  }
}

function onOpenCvReady() {
  $("#face_detection").prop("disabled",false);
}

var doc_path = "%prefix;m=DOC&s=";
var public_path = "%bvar.gallery_path;";
var private_path = "%bvar.gallery_path_private;";

var table;

// Selection
var x1, y1, x2, y2;
var selection = false;
var gMOUSEUP = false;
var gMOUSEDOWN = false;
$(document).mouseup( function() {
  gMOUSEUP = true;
  gMOUSEDOWN = false;
});
$(document).mousedown( function() {
  gMOUSEUP = false;
  gMOUSEDOWN = true;
});

var global_cnt = 0;
function add_new_row( x1, y1, x2, y2 ) {
  if( x2-x1 > 5 && y2-y1 > 5 ) {
    var cnt = ++global_cnt;

    var coords = "" + x1 + "," + y1 + "," + x2 + "," + y2;
    var new_row = table.row.add( {
      "shape": "rect",
      "coords": coords
    }).draw(false);
    $("#map").append( "<area id='area" + cnt + "' shape='rect' coords='" + coords + "' alt='" + cnt + "' title='" + cnt + "'>" );
    $("#div_legend").append( "<li class='legend' id='a" + cnt + "'><span>" + cnt + "</span></li>" );
    new_row.node().id = "row" + cnt;
  }
}

$(document).ready(function() {
  $("#doc,#public,#private").click( function() {
   $("#path").prop("disabled",true);
  });
  $("#other").click( function() {
   $("#path").prop("disabled",false);
  });
  $("#doc,#public,#private,#other,#path,#fname").change( function() {
   var path = $("input[name=path]:checked").val();
   var fname = $("#fname").val();
   if( fname != "" ) {
     if( path == "doc" ) {
       $("#image").attr( "src", doc_path + fname );
     } else if( path == "private" ) {
       $("#image").attr( "src", private_path + fname );
     } else if( path == "public" ) {
       $("#image").attr( "src", public_path + fname );
     } else {
       $("#image").attr( "src", $("#path").val() + fname );
     }
   }
   $("#image").maphilight();
  });

  table = $('#map_table').DataTable( {
     "ajax": {
       "url": "%url;ajax=on",
       "dataSrc": "r.map"
     },
     "deferRender": true,
     "columns": %[
       {
         "data": "t",
         "defaultContent": "p",
         "render": function ( data, type, row, meta ) {
           var s1 = "", s2 = "", s3 = "", s4 = "";
           if( data == "m" ) {
             s2 = " selected";
           } else if( data == "g" ) {
             s3 = " selected";
           } else if( data == "e" ) {
             s4 = " selected";
           } else {
             s1 = " selected";
           }
           return( "<select class='form-control update' row='" + meta.row + "'>" +
                   "<option value='p'" + s1 + ">[*person/persons]0</option>" +
                   "<option value='m'" + s2 + ">[*note/notes]0</option>" +
                   "<option value='g'" + s3 + " title='%prefix; + href'>GeneWeb</option>" +
                   "<option value='e'" + s4 + " title='href'>Autre</option>" +
                   "</select>");
         }
       },
       {
         "data": "fn",
         "defaultContent": "",
         "render": function ( data, type, row, meta ) {
           var disabled = "";
           if( get(row.t) != "" && row.t != "p" ) { disabled = " disabled"; }
           return "<input class='form-control update' type='text' value='" + get(data) + "'" + disabled + ">";
         }
       },
       {
         "data": "sn",
         "defaultContent": "",
         "render": function ( data, type, row, meta ) {
           var disabled = "";
           if( get(row.t) != "" && row.t != "p" ) { disabled = " disabled"; }
           return "<input class='form-control update' type='text' value='" + get(data) + "'" + disabled + ">";
         }
       },
       {
         "data": "oc",
         "defaultContent": "",
         "render": function ( data, type, row, meta ) {
           var disabled = "";
           if( get(row.t) != "" && row.t != "p" ) { disabled = " disabled"; }
           return "<input class='form-control update' type='number' value='" + get(data) + "' min='0' max='99' style='width: 4em;'" + disabled + ">";
         }
       },
       {
         "data": "misc",
         "defaultContent": "",
         "render": function ( data, type, row, meta ) {
           var disabled = "";
           if( row.t != "m" ) { disabled = " disabled"; }
           return "<input class='form-control update' type='text' value='" + get(data) + "'" + disabled + ">";
         }
       },
       {
         "data": "href",
         "defaultContent": "",
         "render": function ( data, type, row, meta ) {
           var disabled = "";
           var placeholder = "";
           if( row.t != "e" && row.t != "g" ) { disabled = " disabled"; }
           if( row.t == "e" ) { placeholder = " placeholder='https://...'"; }
           if( row.t == "g" ) { placeholder = " placeholder='m=...'"; }
           return "<input class='form-control update' type='text' value='" + get(data) + "'" + placeholder + disabled + ">";
         }
       },
       {
         "data": "alt",
         "defaultContent": "",
         "render": function ( data, type, row, meta ) {
           return "<input class='form-control update' type='text' value='" + get(data) + "'>";
         }
       },
       { "data": null, "defaultContent": '<a class="fa fa-trash-alt remove"></a>' }
     %],
     "rowCallback": function( row, r ) {
       var cnt = row.id.replace(/[a-z]/g, "");
       if( get(r.t) == "" || r.t == "p" ) {
         if( get(r.fn) != "" && get(r.sn) != "" ) {
           var oc = get(r.oc);
           var oc2;
           if( oc != "" && oc != 0 ) { oc2 = "/" + oc ; oc = "&oc=" + oc; } else { oc2 = "" ; oc = "" }
           var txt = "";
           if( get(r.alt) != "" ) { txt = " - (" + r.alt + ")"; }
           $("#a"+cnt).html( cnt + " <a href='%prefix;&p=" + r.fn + "&n=" + r.sn + oc + "' target='_blank'>" + r.fn + " " + r.sn + txt + "</a>" );
           r.gw = "[" + "[" + r.fn + "/" + r.sn + oc2 + "]" + "]";
         } else {
           $("#a"+cnt).html( cnt );
           delete r.gw;
         }
       } else if ( r.t == "m" ) {
         if( get(r.misc) != "" ) {
           $("#a"+cnt).html( cnt + " <a href='%prefix;&m=NOTES&f=" + r.misc + "' target='_blank'>" + get(r.alt) + "</a>" );
           r.gw = "[" + "[" + "[" + r.misc + "]" + "]" + "]";
         } else {
           $("#a"+cnt).html( cnt );
           delete r.gw;
         }
       } else if ( r.t == "g" ) {
         if( get(r.href) != "" ) {
           $("#a"+cnt).html( cnt + " <a href='%prefix;" + r.href + "' target='_blank'>" + get(r.alt) + "</a>" );
         } else {
           $("#a"+cnt).html( cnt );
         }
         delete r.gw;
       } else if ( r.t == "e" ) {
         if( get(r.href) != "" ) {
           $("#a"+cnt).html( cnt + " <a href='" + r.href + "' target='_blank'>" + get(r.alt) + "</a>" );
         } else {
           $("#a"+cnt).html( cnt );
         }
         delete r.gw;
       }
     },
     "paging": false,
     "ordering": false,
     "searching": false,
     "info": false,
     "scrollY": "25vh",
     "scrollCollapse": true,
     "language": {
       "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/[
af: Afrikaans
bg: Bulgarian
br: FIXME
ca: Catalan
co: FIXME
cs: Czech
da: Danish
de: German
en: English
eo: FIXME
es: Spaicsh
et: Estonian
fi: Finnish
fr: French
he: Hebrew
is: Icelandic
it: Italian
lv: Latvian
nl: Dutch
no: Norwegian-Nynorsk
oc: FIXME
pl: Polish
pt: Portuguese
pt-br: Portuguese-Brasil
ro: Romanian
ru: Russian
sk: Slovak
sl: Slovenian
sv: Swedish
zh: Chinese
].json"
     },
    "initComplete": function( settings, json) {
       $("#digest").val( json.digest );
       json = json.r;
       if( json.path == "doc" ) {
         $("#doc").prop( "checked", true );
       } else if( json.path == "private" ) {
         $("#private").prop( "checked", true );
       } else if( json.path == "public" ) {
         $("#public").prop( "checked", true );
       } else {
         $("#other").prop( "checked", true );
         $("#path")
          .val( json.path )
          .prop( "disabled", false );
       }
       $("#fname").val( json.img ).change();
       $("#page_title").val( json.title );
       $("#page_desc").val( json.desc );

       // Init map and legend from JSON
       json.map.forEach( function( r ) {
         var cnt = ++global_cnt;

         $("#map").append( "<area id='area" + cnt + "' shape='" + get(r.shape) + "' coords='" + get(r.coords) +
            "' alt='" + cnt + "' title='" + cnt + "'>" );
         if( get(r.fn) != "" && get(r.sn) != "" ) {
           var oc = get(r.oc);
           if( oc != "" && oc != 0 ) { oc = "&oc=" + oc; } else { oc = "" ; }
           var txt = "";
           if( get(r.alt) != "" ) { txt = " - (" + r.alt + ")"; }
           $("#div_legend").append( "<li class='legend' id='a" + cnt + "'><span>"+ cnt +
              " <a href='%prefix;&p=" + r.fn + "&n=" + r.sn + oc + "' target='_blank'>" + r.fn + " " + r.sn + txt + "</a></span></li>" );
         } else {
           $("#div_legend").append( "<li class='legend' id='a" + cnt + "'><span>" + cnt + "</span></li>" );
         }

         // Make sure we can find the row in table
         table.row(cnt-1).node().id = "row" + cnt;
       });
    } 
  } );

  $(document).on( "mouseover", ".legend", function(e) {
    var n = $(this).attr("id").replace(/[a-z]/g, "");
    $( "#area" + n ).mouseover();
    $( "#row" + n ).addClass( "in" );
  });
  $(document).on( "mouseout", ".legend", function(e) {
    var n = $(this).attr("id").replace(/[a-z]/g, "");
    $( "#area" + n ).mouseout();
    $( "#row" + n ).removeClass( "in" );
  });
  $(document).on( "click", "li.legend", function(e) {
    var n = $(this).attr("id").replace(/[a-z]/g, "");
    $( "#row" + n ).find("input").first().focus();
  });
  $(document).on( "mouseover", "area", function(e) {
    var n = $(this).attr("id").replace(/[a-z]/g, "");
    $( "#a" + n + " span" ).addClass( "in" );
    $( "#row" + n ).addClass( "in" );
  });
  $(document).on( "mouseout", "area", function(e) {
    var n = $(this).attr("id").replace(/[a-z]/g, "");
    $( "#a" + n + " span" ).removeClass( "in" );
    $( "#row" + n ).removeClass( "in" );
  });
  $(document).on( "mouseover", "tr", function(e) {
    if( typeof $(this).attr("id") !== "undefined" ) {
      var n = $(this).attr("id").replace(/[a-z]/g, "");
      $( "#area" + n ).mouseover();
      $( "#a" + n + " span" ).addClass( "in" );
    }
  });
  $(document).on( "mouseout", "tr", function(e) {
    if( typeof $(this).attr("id") !== "undefined" ) {
      var n = $(this).attr("id").replace(/[a-z]/g, "");
      $( "#area" + n ).mouseout();
      $( "#a" + n + " span" ).removeClass( "in" );
    }
  });

  $(document).on( "change", ".update", function() {
    let td = table.cell( this.closest('td') );
    let tr = $(this).closest('tr');

    // Propagate change to Datatables
    td.data( $(this).val() ).draw();

    // This is needed to update rendering on other input fields
    if( this.nodeName == "SELECT" ) {
      tr.find("input.update").change();
    }
  });

  $(document).on( "click", ".remove", function (e) {
    var tr = $(this).closest('tr');
    var n = tr.attr("id").replace(/[a-z]/g, "");

    $( "#area" + n ).remove();
    $( "#a" + n ).remove();
    table.row( tr ).remove().draw();
  });

  $("#face_detection").click( function() {
   let src = cv.imread( $("#image").get(0) );
   let gray = new cv.Mat();
   cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY, 0);
   let faces = new cv.RectVector();
   let faceCascade = new cv.CascadeClassifier();

   // load pre-trained classifiers
   let utils = new Utils('fd_error');
   let faceCascadeFile = 'haarcascade_frontalface_default.xml';
   // FIXME : It works only the first time
   utils.createFileFromUrl( faceCascadeFile, '%if(cgi)%bvar.static_path;%end;js/' + faceCascadeFile, () => {
     faceCascade.load( faceCascadeFile );
     // detect faces
     let msize = new cv.Size(0, 0);
     faceCascade.detectMultiScale(gray, faces, 1.1, 3, 0, msize, msize); // TODO: add a way to adjust parameters
     for( let i = 0; i < faces.size(); ++i ) {
       add_new_row( faces.get(i).x, faces.get(i).y, faces.get(i).x + faces.get(i).width, faces.get(i).y + faces.get(i).height );
     }
     faceCascade.delete();
     faces.delete();
     gray.delete();
     src.delete();
   });
  });

  $("#frame").mousedown( function(e) {
    // Start a new selection
    x1 = Math.round(e.pageX);
    y1 = Math.round(e.pageY);
    x2 = x1;
    y2 = y1;
    selection = true;
  });
  $("#frame").mousemove( function(e) {
    if( selection ) {
      // Selection in progress
      x2 = Math.round(e.pageX);
      y2 = Math.round(e.pageY);
      
      if( selection ) {
        var TOP = (y1 < y2) ? y1 : y2;
        var LEFT = (x1 < x2) ? x1 : x2;
        var WIDTH = (x1 < x2) ? x2 - x1 : x1 - x2;
        var HEIGHT = (y1 < y2) ? y2 - y1 : y1 - y2;

        $("#selection").css({
          position: 'absolute',
          zIndex: 5000,
          left: LEFT,
          top: TOP,
          width: WIDTH,
          height: HEIGHT
        });
        $("#selection").show();
      }
    }
  });
  $("#frame").mouseup( function() {
    // Selection completed
    selection = false;
    $("#selection").hide();

    var pos = $("#frame").get(0).getBoundingClientRect();
    var l_x1 = (x1 < x2) ? x1 : x2 ; l_x1 -= pos.left + pageXOffset;
    var l_x2 = (x1 < x2) ? x2 : x1 ; l_x2 -= pos.left + pageXOffset;
    var l_y1 = (y1 < y2) ? y1 : y2 ; l_y1 -= pos.top + pageYOffset;
    var l_y2 = (y1 < y2) ? y2 : y1 ; l_y2 -= pos.top + pageYOffset;
    add_new_row( l_x1, l_y1, l_x2, l_y2 );
  });
  $("#frame").mouseenter( function() {
    (gMOUSEDOWN) ? selection = true : selection = false;
  });
  $("#selection").mouseenter( function() {
    (gMOUSEDOWN) ? selection = true : selection = false;
  });
  $("#frame").mouseleave( function() {
    selection = false;
  });

  $( "#form" ).submit( function () {
    event.preventDefault();
    var res = {
      "title": $("#page_title").val(),
      "desc": $("#page_desc").val(),
      "path": $("input[name=path]:checked").val(),
      "img": $("#fname").val(),
      "map": table.rows().data().toArray()
    };
    // Cleanup data before to save
    for( i=0, ien=res.map.length ; i < ien ; i++ ) {
      if( res.map[i].t == "p" ) { delete res.map[i].misc ; delete res.map[i].href ; }
      if( res.map[i].t == "m" ) { delete res.map[i].fn ; delete res.map[i].sn ; delete res.map[i].oc ; delete res.map[i].href ; }
      if( res.map[i].t == "g" ) { delete res.map[i].fn ; delete res.map[i].sn ; delete res.map[i].oc ; delete res.map[i].misc ; delete res.map[i].gw ; }
      if( res.map[i].t == "e" ) { delete res.map[i].fn ; delete res.map[i].sn ; delete res.map[i].oc ; delete res.map[i].misc ; delete res.map[i].gw ; }
      if( res.map[i].t == "" ) { delete res.map[i].t ; }
      if( res.map[i].fn == "" ) { delete res.map[i].fn ; }
      if( res.map[i].sn == "" ) { delete res.map[i].sn ; }
      if( res.map[i].oc == "" ) { delete res.map[i].oc ; }
      if( res.map[i].misc == "" ) { delete res.map[i].misc ; }
      if( res.map[i].href == "" ) { delete res.map[i].href ; }
      if( res.map[i].alt == "" ) { delete res.map[i].alt ; }
      if( res.map[i].shape == "" ) { delete res.map[i].shape ; }
      if( res.map[i].coords == "" ) { delete res.map[i].coords ; }
      if( res.map[i].gw == "" ) { delete res.map[i].gw ; }
    }
    var title = $("#page_title").val();
    if( title == "" ) { title = "&hellip;" }
    $("#notes").val( "TITLE=" + title + "\nTYPE=gallery\n" + JSON.stringify( res ) );
    $(this).unbind('submit').submit();
  });
});
</script>
</body>
</html>
